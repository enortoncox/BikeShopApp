<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BikeShopApp.WebAPI</name>
    </assembly>
    <members>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IUserRepository,AutoMapper.IMapper,BikeShopApp.Core.ServiceInterfaces.IJwtAuth,Microsoft.AspNetCore.Identity.UserManager{BikeShopApp.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{BikeShopApp.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{BikeShopApp.Core.Identity.ApplicationRole})">
            <summary>
            Auth Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.Login(BikeShopApp.Core.DTO.UserLoginDto)">
            <summary>
            Allow the user to log in and return a Jwt Token.
            </summary>
            <param name="userLoginDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.Register(BikeShopApp.Core.DTO.UserRegisterDto)">
            <summary>
            Register a new user and return a Jwt Token.
            </summary>
            <param name="userRegisterDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.IsUserAdmin(System.Int32)">
            <summary>
            Check if the user with the passed Id has the "Admin" role.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.ChangeAdminStatus(System.Int32)">
            <summary>
            Remove or Add the "Admin" role to a user.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.GenerateNewJwtToken(BikeShopApp.Core.DTO.TokensDto)">
            <summary>
            Generate a new Jwt and refresh token and return it.
            </summary>
            <param name="tokensDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.AuthController.VerifyJwtToken(BikeShopApp.Core.DTO.TokensDto)">
            <summary>
            Verify if the passed tokens are valid.
            </summary>
            <param name="tokensDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.#ctor(BikeShopApp.Core.RepositoryInterfaces.ICartRepository,BikeShopApp.Core.RepositoryInterfaces.IProductRepository,AutoMapper.IMapper)">
            <summary>
            Carts Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.GetCart(System.Int32)">
            <summary>
            Get a cart using its Id.
            </summary>
            <param name="cartId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.AddToCart(System.Int32,BikeShopApp.Core.DTO.CartItemDto)">
            <summary>
            Add a product to a user's cart using its Id.
            </summary>
            <param name="cartId"></param>
            <param name="cartItemDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.RemoveProductFromCart(System.Int32,System.Int32)">
            <summary>
            Remove a product from a user's cart using its Id.
            </summary>
            <param name="cartId"></param>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.GetProductsInCart(System.Int32)">
            <summary>
            Get all products in a user's cart.
            </summary>
            <param name="cartId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.GetNumberOfItemsInCart(System.Int32)">
            <summary>
            Get the total number of items in a user's cart
            </summary>
            <param name="cartId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.GetTotalPriceOfCart(System.Int32)">
            <summary>
            Get the total price of a user's cart.
            </summary>
            <param name="cartId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CartsController.EmptyCart(System.Int32)">
            <summary>
            Remove all items in a user's cart.
            </summary>
            <param name="cartId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.#ctor(BikeShopApp.Core.RepositoryInterfaces.ICategoryRepository,AutoMapper.IMapper)">
            <summary>
            Category Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.GetCategory(System.Int32)">
            <summary>
            Get the category of the passed Id.
            </summary>
            <param name="categoryId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.GetCategories">
            <summary>
            Get all categories in the database.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.CreateCategory(BikeShopApp.Core.DTO.CategoryDto)">
            <summary>
            Create a new category based on the passed categoryDto.
            </summary>
            <param name="categoryDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.UpdateCategory(System.Int32,BikeShopApp.Core.DTO.CategoryDto)">
            <summary>
            Update an existing category based on the passed categoryDto.
            </summary>
            <param name="categoryId"></param>
            <param name="categoryDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.DeleteCategory(System.Int32)">
            <summary>
            Deletes the category with the passed Id.
            </summary>
            <param name="categoryId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.CategoriesController.GetAllProductsByCategory(System.Int32)">
            <summary>
            Gets all products that have the passed category Id.
            </summary>
            <param name="categoryId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.FileController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IFileRepository)">
            <summary>
            File Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.FileController.UploadFile">
            <summary>
            Upload the file that was passed in the form data.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.FileController.UpdateFile(System.String)">
            <summary>
            Delete the file at the passed filePath and upload the file in the form data.
            </summary>
            <param name="oldFilePath"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.FileController.DeleteFile(System.String)">
            <summary>
            Delete the file at the passed filePath.
            </summary>
            <param name="filePath"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IOrderRepository,BikeShopApp.Core.RepositoryInterfaces.IUserRepository,AutoMapper.IMapper)">
            <summary>
            Orders Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetOrders">
            <summary>
            Get all the orders of every user.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetOrder(System.Int32)">
            <summary>
            Get the order with the passed Id.
            </summary>
            <param name="orderId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.CreateOrder(BikeShopApp.Core.DTO.OrderAndProductsDto)">
            <summary>
            Create a new order based on the orderAndProductDto.
            </summary>
            <param name="orderAndProductsDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.UpdateOrder(System.Int32,BikeShopApp.Core.DTO.OrderDto)">
            <summary>
            Update an order based on the passed orderDto.
            </summary>
            <param name="orderId"></param>
            <param name="orderDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.DeleteOrder(System.Int32)">
            <summary>
            Delete the order with the passed Id.
            </summary>
            <param name="orderId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetUserOfOrder(System.Int32)">
            <summary>
            Get the user of the order with the passed Id.
            </summary>
            <param name="orderId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetOrdersFromUser(System.Int32)">
            <summary>
            Get all orders from the user with the passed Id.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetOrdersFromUserByPage(System.Int32,System.String,System.String)">
            <summary>
            Get all orders of a user for the current page.
            </summary>
            <param name="userId"></param>
            <param name="currentPage"></param>
            <param name="pageResults"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetAllProductsInOrder(System.Int32)">
            <summary>
            Get all of the products in the order with the passed Id.
            </summary>
            <param name="orderId"></param>
            <returns></returns>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.OrdersController.GetAllOrdersFromAfterPeriod(System.DateTime)">
            <summary>
            Get all orders from after the passed date.
            </summary>
            <param name="date"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IProductRepository,AutoMapper.IMapper)">
            <summary>
            Products Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetProduct(System.Int32)">
            <summary>
            Get the product with the passed Id.
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetProducts(System.String)">
            <summary>
            Get all products with the passed category.
            </summary>
            <param name="category"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetProductsByPage(System.String,System.String,System.String)">
            <summary>
            Get all products with the passed category for the current page.
            </summary>
            <param name="categoryId"></param>
            <param name="currentPage"></param>
            <param name="pageResults"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetFilteredProductsByPage(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Get all products with the passed category that match the price and rating filter.
            </summary>
            <param name="categoryId"></param>
            <param name="currentPage"></param>
            <param name="pageResults"></param>
            <param name="price"></param>
            <param name="rating"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.CreateProduct(BikeShopApp.Core.DTO.ProductDto)">
            <summary>
            Create a new product based on the passed productDto.
            </summary>
            <param name="productDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.UpdateProduct(System.Int32,BikeShopApp.Core.DTO.ProductDto)">
            <summary>
            Update an existing product based on the passed productDto.
            </summary>
            <param name="productId"></param>
            <param name="productDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.DeleteProduct(System.Int32)">
            <summary>
            Delete the product with the passed Id.
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetAllProductsWithQuantityOrLower(System.Int32)">
            <summary>
            Get all products that have the passed quantity or lower.
            </summary>
            <param name="quantity"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.GetAllProductsThatStartWithLetter(System.String)">
            <summary>
            Get all products whose name starts with the passed letter.
            </summary>
            <param name="letter"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.DecreaseQuantity(System.Int32)">
            <summary>
            Decrease the quantity by 1 of the product with the passed Id.
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ProductsController.SetAvgRatingOfProduct(System.Int32)">
            <summary>
            Set the average rating of the product with the passed Id.
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IReviewRepository,BikeShopApp.Core.RepositoryInterfaces.IUserRepository,BikeShopApp.Core.RepositoryInterfaces.IProductRepository,AutoMapper.IMapper)">
            <summary>
            Review Controller Constructor.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.GetReview(System.Int32)">
            <summary>
            Get the review with the passed Id.
            </summary>
            <param name="reviewId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.CreateReview(BikeShopApp.Core.DTO.ReviewDto)">
            <summary>
            Create a new review based on the passed reviewDto.
            </summary>
            <param name="reviewDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.UpdateReview(System.Int32,BikeShopApp.Core.DTO.ReviewDto)">
            <summary>
            Update an existing review based on the passed reviewDto.
            </summary>
            <param name="reviewId"></param>
            <param name="reviewDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.DeleteReview(System.Int32)">
            <summary>
            Delete an existing review based on the passed Id.
            </summary>
            <param name="reviewId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.GetAllReviewsFromAUser(System.Int32)">
            <summary>
            Get all reviews from the user with the passed Id.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.ReviewsController.GetAllReviewsOfAProduct(System.Int32)">
            <summary>
            Get all the reviews for the product with the passed Id.
            </summary>
            <param name="productId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.#ctor(BikeShopApp.Core.RepositoryInterfaces.IUserRepository,AutoMapper.IMapper)">
            <summary>
            Users Controller Constructor.
            </summary>
            <param name="userRepository"></param>
            <param name="mapper"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.GetUsers">
            <summary>
            Get all users in the database.
            </summary>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.GetUser(System.Int32)">
            <summary>
            Get the user with the passed Id.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.UpdateUser(System.Int32,BikeShopApp.Core.DTO.UserDto)">
            <summary>
            Update an existing user based on the passed userDto.
            </summary>
            <param name="userId"></param>
            <param name="userDto"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.DeleteUser(System.Int32)">
            <summary>
            Delete an existing user with the passed Id.
            </summary>
            <param name="userId"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.UpdateUserPassword(System.Int32,BikeShopApp.Core.DTO.UserPasswordDto)">
            <summary>
            Update an existing user's password based on the passed userPasswordDto.
            </summary>
            <param name="userId"></param>
            <param name="userPassword"></param>
        </member>
        <member name="M:BikeShopApp.WebAPI.Controllers.UsersController.GetAllUsersThatStartWithLetter(System.String)">
            <summary>
            Get all users whose name starts with the passed letter.
            </summary>
            <param name="letter"></param>
        </member>
    </members>
</doc>
